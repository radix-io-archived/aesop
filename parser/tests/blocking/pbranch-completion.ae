/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */


/* RUN THIS IN VALGRIND!! */

#include <unistd.h>

#include <aesop/aesop.h>
#include "parser/tests/blocking/btest.hae"

__blocking void do_random_test(void)
{
    int ret;
    int r = random() % 3;
    switch (r)
    {
        case 0:
            ret = ictest_random();
            break;
        case 1:
            ret = tctest_random();
            break;
        case 2:
            ret = btest_sleep_random();
            break;
        default: assert(0);
    }
}

__blocking void test_pb_completion(void)
{
    int i;
    int ocount = random() % 10;
    int icount = random() % 10;
    
    for(i = 0; i < ocount; ++i)
    {
        pwait
        {
            pprivate int j;

            for(j = 0; j < icount; ++j)
            {
                pbranch
                {
                    do_random_test();

                    do_random_test();

                }
            }
        }
    }
}

__blocking int aesop_main(int argc, char **argv)
{
    int count;

    if(argc < 2)
    {
        printf("usage: %s <count>\n", argv[0]);
        return 1;
    }
    count = atoi(argv[1]);
    pwait
    {
        pprivate int i = 0;
        for(; i < count; ++i)
        {
            pbranch
            {
                test_pb_completion();
            }
        }
    }
    return 0;
}
aesop_main_set(aesop_main);


/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

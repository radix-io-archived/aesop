/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */

#include <aesop/aesop.h>
#include "parser/tests/blocking/btest.hae"

static __blocking void run_pbreak4(void)
{
	int a = 0, b = 0, c = 0;
	int ret, ret1, ret2;

	ret = btest1(&a);
	assert(ret == 0);
	assert(a == 1);

	pwait
	{
	    pbranch
	    {
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 2);
		if(a > 1)
		{
		    printf("hit pbreak!\n");
                    aesop_cancel_branches();
		    pbreak;
		}
		ret = btest3(&a);
		assert(0);
	    }

	    pbranch
	    {
		ret1 = btest2(&b);
		assert(ret1 == 0);
		if(b > 1)
		{
		    printf("hit pbreak2!\n");
                    aesop_cancel_branches();
		    pbreak;
		}
	    }

	    pbranch
	    {
		printf("other pbranch\n");
		ret2 = btest1(&c);
		assert(ret2 == 0);
		assert(c == 1);	
		printf("other pbranch2\n");
		ret2 = btest3(&c);
		assert(ret2 == 0);
		assert(c == 4);
	    }
	}

	printf("pwait done\n");

	ret = btest3(&a);
	assert(ret == 0);
	assert(a == 5);

}

__blocking int aesop_main(int argc, char **argv)
{
    btest_init();
    run_pbreak4();
    btest_finalize();
    return 0;
}
aesop_main_set(aesop_main);

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

#include "src/aesop/aesop.h"
#include "src/aesop/parser/tests/blocking/btest.hae"

static int here = 0;

static __blocking int run_inner(void)
{
	int ret;
	int a = 0;
	
	ret = btest1(&a);
	assert(ret == 0);
	assert(a == 1);
        return 0;
}
	
static __blocking void run_outer(void)
{
	run_inner();
	here = 1;
}

static int done = 0;

static void basic_cb(void *ptr)
{
    printf("%p\n", ptr);
    printf("done\n");
    done = 1;
}

int main(int argc, char *argv[])
{
	ae_op_id_t op_id;
	void *myptr = malloc(1);

	btest_init();
	printf("%p\n", myptr);
	ae_post_blocking(run_outer, basic_cb, myptr, NULL, NULL, &op_id);

	while(done == 0)
        {
	    ae_poll(NULL, 0);
	}

	assert(here == 1);
	btest_finalize();
	free(myptr);
	return 0;
}

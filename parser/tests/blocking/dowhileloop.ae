/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */

#include <aesop/aesop.h>
#include "parser/tests/blocking/btest.hae"
#include <assert.h>

static __blocking void run_forloop(void)
{
	int a = 0;
        int ret;
	
        /* The btest_fail10() function will increment a by 1 each time it is
         * called.  It will return -EAGAIN until a gets to 10, then
         * it will start returning 0.
         */
        do
        {
		ret = btest_fail10(&a);
	} while(ret == -EAGAIN);

        assert(a >= 10);
}

__blocking int aesop_main(int argc, char **argv)
{
    run_forloop();
    return 0;
}
aesop_main_set(aesop_main);


/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

#include "src/aesop/aesop.h"
#include "src/aesop/parser/tests/blocking/btest.hae"
#include "src/aesop/aesop-support.hae"

static __blocking void run_pbreak5(void)
{
	int a[100];
	int ret[100];
	int ret1;
	int b = 0;

	memset(a, 0, sizeof(int)*100);

	ret1 = btest1(&b);
	assert(ret1 == 0);
	assert(b == 1);

	pwait
	{
	    pprivate int i;

	    pbranch
	    {
		ret1 = btest1(&b);
		assert(ret1 == 0);
		assert(b == 2);
		if(b > 1)
		{
		    printf("hit pbreak!\n");
                    aesop_cancel_branches_wait();
		    pbreak;
		}
		ret1 = btest3(&b);
		assert(0);
	    }

	    for(i = 0; i < 100; ++i)
	    {
 	        pbranch
	        {
		    ret[i] = btest2(&a[i]);
		    assert(ret[i] == 0);
		    assert(a[i] == 2);
		    ret[i] = btest3(&a[i]);
		    assert(ret[i] == 0);
		    assert(a[i] == 5);
	        }
	    }
	}

	printf("pwait done\n");

	ret1 = btest3(&b);
	assert(ret1 == 0);
	assert(b == 5);

}

__blocking int aesop_main(int argc, char **argv)
{
    run_pbreak5();
    return 0;
}
btest_main_set(aesop_main, "btest", "timer");

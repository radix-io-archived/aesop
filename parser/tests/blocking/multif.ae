#include "aesop.h"
#include "parser/tests/blocking/btest.hae"

int val = 0;

static __blocking void run_multiif(void)
{
	int ret;
	int a = 0;
	
	if(val == 0)
	{
		printf("no calls\n");
	}
	else if(val == 1)
	{
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 1);
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 2);
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 3);
	}
	else if(val == 2)
	{
		ret = btest2(&a);
		assert(ret == 0);
		assert(a == 2);
		ret = btest2(&a);
		assert(ret == 0);
		assert(a == 4);
		ret = btest2(&a);
		assert(ret == 0);
		assert(a == 6);
	}
	else if(val == 3)
	{
		ret = btest3(&a);
		assert(ret == 0);
		assert(a == 3);
		ret = btest3(&a);
		assert(ret == 0);
		assert(a == 6);
		ret = btest3(&a);
		assert(ret == 0);
		assert(a == 9);
	}
	else
	{
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 1);
		ret = btest2(&a);
		assert(ret == 0);
		assert(a == 3);
		ret = btest3(&a);
		assert(ret == 0);
		assert(a == 6);
	}
}

__blocking int aesop_main(int argc, char **argv)
{
    run_multiif();
    return 0;
}
aesop_main_set(aesop_main);

#include "src/aesop/aesop.h"
#include "src/aesop/parser/tests/blocking/btest.hae"
#include <assert.h>

static __blocking void run_par1(void)
{
	int a = 0, b = 0, c = 0;
	int ret1, ret2, ret3;

	pwait
	{
	    pbranch
	    {
		ret1 = btest1(&a);
                if(ret1 != 0)
                {
                    printf("Error in branch 1.\n");
                    pbreak;
                }

                ret1 = btest2(&a);
                if(ret1 != 0)
                {
                    printf("Error in branch 1.\n");
                    pbreak;
                }
	    }

	    pbranch
	    {
                ret2 = btest1(&b);
                if(ret2 != 0)
                {
                    printf("Error in branch 2.\n");
                    pbreak;
                }

                ret2 = btest2(&b);
                if(ret2 != 0)
                {
                    printf("Error in branch 2.\n");
                    pbreak;
                }
	    }
	
	    pbranch
	    {
                ret3 = btest1(&c);
                if(ret3 != 0)
                {
                    printf("Error in branch 3.\n");
                    pbreak;
                }
                pbreak;

                ret3 = btest2(&c);
                if(ret3 != 0)
                {
                    printf("Error in branch 3.\n");
                    pbreak;
                }
	    }
	}

	printf("pwait done\n");
}


__blocking int aesop_main(int argc, char **argv)
{
    run_par1();
    return 0;
}
btest_main_set(aesop_main, "btest");

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */


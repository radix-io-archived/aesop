/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */

#include <assert.h>

#include <aesop/aesop.h>
#include <aesop/timer.hae>
#include "parser/tests/blocking/btest.hae"

static __blocking void noop(void)
{
    /* aesop_timer(10); */
    return;
}

static __blocking void lonely_pbranch(void)
{
	int a = 0;
	int ret1;

        ret1 = btest1(&a);
        if(ret1 != 0)
        {
            printf("Error in btest1\n");
        }

        pbranch
        {
             noop();
             printf("pbranch done!\n");
        }

        printf("lonely_pbranch done! returning...\n");
        return;
}

static __blocking void lonely_pbranch_wrapper(void)
{
    pwait
    {
        pprivate int i;

        for(i=0; i<128; i++)
        {
            pbranch
            {
                lonely_pbranch();
                printf("finished lonely branch %d from wrapper\n", i);
            }
        }
    }
    printf("finished wrapper\n");

    return;
}

__blocking int aesop_main(int argc, char **argv)
{
    lonely_pbranch_wrapper();
    return 0;
}
aesop_main_set(aesop_main);

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */


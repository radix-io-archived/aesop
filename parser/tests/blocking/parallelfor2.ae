/*
 * (C) 2009 The University of Chicago
 *
 * See COPYING in top-level directory.
 */

#include "src/aesop/aesop.h"
#include "src/aesop/parser/tests/blocking/btest.hae"

static __blocking void run_parfor(
    void)
{
    /* note: if you comment this out, then the test case works fine */
    btest_sleep(1);

    pwait
    {
        int i;
        for (i = 0; i < 2; ++i)
        {
            pbranch
            {
                /* deliberately skip blocking function in one branch */
                if(i != 1)
                {
                    btest_sleep(1);
                }
            }
        }
    }

    printf("pwait done\n");
}

static int done = 0;
static void basic_cb(
    void *ptr)
{
    printf("%p\n", ptr);
    printf("done\n");
    done = 1;
}

int main(
    int argc,
    char *argv[])
{
    ae_op_id_t op_id;
    void *myptr = malloc(1);

    btest_init();
    printf("%p\n", myptr);
    run_parfor(basic_cb, myptr, NULL, NULL, &op_id);

    while (done == 0)
    {
        ae_poll(NULL, 10000);
    }

    btest_finalize();
    free(myptr);
    return 0;
}

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

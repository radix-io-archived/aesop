/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */


#include <assert.h>
#include <aesop/aesop.h>
#include "parser/tests/blocking/btest.hae"

static __blocking void run_basic(void)
{
	int ret;
	int a = 0;

        ret = aesop_set_debugging("foo", 1);
        assert(ret == AE_ERR_NOT_FOUND);

        ret = aesop_set_debugging("btest", 99);
        assert(ret == AE_ERR_INVALID);

        ret = aesop_set_debugging("ae_blocking", 1);
        assert(ret == 0);

	ret = btest1(&a);
	assert(a == 1);
	assert(ret == 0);

	ret = btest2(&a);
	assert(a == 3);
	assert(ret == 0);

        ret = aesop_set_debugging("btest", 1);
        assert(ret == 0);

	ret = btest3(&a);
	assert(a == 6);
	assert(ret == 0);
}

__blocking int aesop_main(int argc, char **argv)
{
    btest_init();
    run_basic();
    btest_finalize();
    return 0;
}
aesop_main_set(aesop_main);


/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

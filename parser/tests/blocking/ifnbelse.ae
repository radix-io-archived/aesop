#include "src/aesop/aesop.h"
#include "src/aesop/parser/tests/blocking/btest.hae"
#include <assert.h>

int val = 0;

static __blocking void run_ifnbelse(void)
{
	int a = 0;
	int ret;
	
	if(val == 0)
	{
		ret = btest1(&a);
		assert(ret == 0);
		assert(a == 1);
	}
	else
	{
		printf("ELSE\n");
	}
        ret = btest3(&a);
        assert(ret == 0);
	if(val == 0) assert(a == 4);
	else assert(a == 3);
}

static int done = 0;

static void basic_cb(void *ptr)
{
    printf("%p\n", ptr);
    printf("done\n");
    done = 1;
}

int main(int argc, char *argv[])
{
	ae_op_id_t op_id;
	void *myptr = malloc(1);

	printf("%p\n", myptr);

	btest_init();
	val = atoi(argv[1]);
	ae_post_blocking(run_ifnbelse, basic_cb, myptr, NULL, NULL, &op_id);

	while(done == 0)
	{
		ae_poll(NULL, 0);
	}
		
	btest_finalize();
	free(myptr);
	return 0;
}

/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */

#include <unistd.h>
#include <aesop/aesop.h>
#include <aesop/timer.hae>
#include "parser/tests/blocking/btest.hae"
#include <assert.h>

static __blocking void run_test(void)
{
        int ret1;
        int ret2;
        int a = 0;

	pwait
	{
	    pbranch
	    {
                printf("pbranch1: calling tctest1.\n");
                ret1 = tctest1(&a);
                printf("pbranch1: finished tctest1.\n");
                /* tctest1 runs the callback in a thread.  Sleep here to let
                 * the other pbranch try to cancel before we finish this
                 * pbranch.
                 */
                printf("pbranch1: about to sleep for 5 seconds.\n");
                sleep(5);
                printf("pbranch1: done.\n");
                printf("pbranch1: calling aesop_cancel_branches().\n");
                aesop_cancel_branches();
                printf("pbranch1: done.\n");
	    }

	    pbranch
	    {
                /* wait 1 second to let the tctest1 call finish */
                printf("pbranch2: setting timer for 1 second.\n");
                aesop_timer(1000);
                printf("pbranch2: timer done.\n");
                /* cancel the other pbranch */
                printf("pbranch2: calling aesop_cancel_branches().\n");
                aesop_cancel_branches();
                printf("pbranch2: done.\n");
	    }
	}

	printf("pwait done\n");



}

__blocking int aesop_main(int argc, char **argv)
{
    btest_init();
    aesop_timer_init();
    run_test();
    aesop_timer_finalize();
    btest_finalize();
    return 0;
}
aesop_main_set(aesop_main);


/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

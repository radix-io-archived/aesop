/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */


#include <aesop/aesop.h>
#include <aesop/timer.hae>

__blocking void do_blocking3(void)
{
    int ret;
    int sleep;

    ret = aesop_hints_get("aesop.test.sleepy_time", sizeof(sleep), &sleep);
    assert(ret == 0);

    aesop_timer(sleep);
}

__blocking void do_blocking2(void)
{
    pwait
    {
        pbranch
        {
            do_blocking3();
        }

        pbranch
        {
            do_blocking3();
        }
    }
}

__blocking void do_blocking1(void)
{
    int sleep = 1000;
    int ret;

    ret = aesop_hints_put("aesop.test.sleepy_time", sizeof(sleep), &sleep, 1);
    assert(ret == 0);

    do_blocking2();
}

__blocking int aesop_main(int argc, char **argv)
{
    int ret;

    ae_hints_type_register("aesop.test.sleepy_time", 0);

    ret = aesop_timer_init();
    if(ret != 0)
    {
        fprintf(stderr, "Error: failed to initialize timers.\n");
        return(-1);
    }

    do_blocking1();

    do_blocking3();

    aesop_timer_finalize();

    return 0;
}
aesop_main_set(aesop_main);

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

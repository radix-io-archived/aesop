/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */


#include <aesop/aesop.h>
#include "parser/tests/blocking/btest.hae"

struct mystruct
{
    __blocking int (*myfun)(int a);
    int a;
};

static __blocking int blocking1(int a)
{
    int ret;
    int b = a;

    ret = btest1(&a);
    assert(ret == 0);
    assert(a == (b + 1));

    return 0;
}

static __blocking void get_fn(struct mystruct* ms)
{
    ms->myfun = blocking1;
    ms->a = 0;
}



__blocking int aesop_main(int argc, char **argv)
{
    btest_init();

/* NOTE: if you comment out the pwait and pbranch stuff and just call get_fn
 * and ms.myfun() directly in aesop_main then the test appears to work fine.
 */
    pwait
    {
        pprivate int i;
        for(i=0; i<2; i++)
        {
            pbranch
            {
                struct mystruct ms;
                
                get_fn(&ms);
                ms.myfun(ms.a);
            }
        }
    }

    btest_finalize();

    return 0;
}
aesop_main_set(aesop_main);


/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

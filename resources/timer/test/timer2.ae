/*
 * (C) 2009 The University of Chicago
 *
 * See COPYRIGHT in top-level directory.
 */


#include <stdio.h>
#include <aesop/aesop.h>
#include <aesop/timer.hae>

int exit_loop = 0;

static __blocking int receiver()
{
    int i = 0;
    printf("receiver\n");

    pwait
    {
        pbranch
        {
            while(!exit_loop)
            {
                printf("recving...\n");
                aesop_timer(100);
            }
        }
        pbranch
        {
            while(!exit_loop)
            {
                printf("sleeping...\n");
                aesop_timer(100);
                if (i++ == 10)
                {
                    exit_loop = 1;
                }
                printf("iter=%i\n", i);
            }
        }
    }

    return 0;
}

__blocking int aesop_main(int argc, char **argv)
{
    int ret;

    ret = aesop_timer_init();
    if(ret != 0)
        return(ret);

    printf("ready\n");

    ret = receiver();

    printf("done\n");

    return ret;
}

aesop_main_set(aesop_main);

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

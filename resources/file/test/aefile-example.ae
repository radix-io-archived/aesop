
#include <stdio.h>
#include <unistd.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdlib.h>

#include "aesop.h"
#include "resources/file/aefile.hae"
#include "resources/thread/aethread.hae"

static double wtime(void)
{
    struct timeval t;
    gettimeofday(&t, (void *) 0);
    return ( (double) t.tv_sec + ( (double) t.tv_usec / 1000000 ) );
}

static __blocking int dotest(void)
{
    int fd;
    int ret;
    double start, end;
    char fname_template[256];
    char buf[4096];

    start = wtime();

    /* create a temporary file */
    sprintf(fname_template, "/tmp/aefile-example.XXXXXX");
    fd = mkstemp(fname_template);
    if(fd < 0)
    {
        perror("mkstemp");
        return(-1);
    }

    /* use aefile resource to access file */
    ret = aefile_pwrite(fd, &buf, 4096, 0);
    if(ret < 0)
    {
        /* aefile_pwrite() does not set errno.  Look for error code in the
         * return value instead 
         */
        fprintf(stderr, "aefile_pwrite: %s\n", strerror(-ret));
        return(-1);
    }

    ret = close(fd);
    if(ret < 0)
    {
        perror("close");
        return(-1);
    }
    ret = unlink(fname_template);
    if(ret < 0)
    {
        perror("unlink");
        return(-1);
    }

    end = wtime();

    printf("Example complete: %f seconds.\n", (end-start));

    return 0;
}

__blocking int aesop_main(int argc, char **argv)
{
    int ret;

    ret = aefile_init();
    assert(ret == 0);

    ret = dotest();
    if(ret == 0)
        printf("Success.\n");
    else
        printf("Failure.\n");

    aefile_finalize();

    return(ret);
}

aesop_main_set(aesop_main);

/*
 * Local variables:
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

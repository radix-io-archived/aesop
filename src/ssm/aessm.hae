#ifndef __SSM_HAE__
#define __SSM_HAE__

#include "ssm.h"
#include "ssmdef.h"
#include <pthread.h>

typedef struct aessm_s
{
    ssm_id ssm;
    ssm_addr_id laddr_id;
    pthread_t thread_id;
    int state; 
} aessm_t;

int aessm_initalize (aessm_t *aessm_id);
int aessm_finalize (aessm_t *aessm_id);

int aessm_link (ssm_id ssm, ssm_flags16 flags,
                ssm_match_bits match_bits, ssm_match_bits mask_bits,
                ssm_iovec_p data_iovec, ssm_me_pos pos, ssm_me_id anchor,
                uint64_t count, ssm_me_id *me);

__blocking int aessm_unlink(ssm_me_id me, ssm_evt_p evt);
__blocking int aessm_put (ssm_me_id me, ssm_addr_id target_addr, ssm_evt_p evt);
__blocking int aessm_get (ssm_me_id me, ssm_addr_id target_addr, ssm_evt_p evt);
__blocking int aessm_msg (ssm_me_id me, ssm_addr_id target_addr, uint64_t info_a, uint64_t info_b, ssm_evt_p evt);
__blocking int aessm_ping (ssm_me_id me, ssm_addr_id target_addr, ssm_evt_p evt);
__blocking int aessm_wait (ssm_me_id me, ssm_evt_p evt);

#endif
